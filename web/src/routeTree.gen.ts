/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as MeRouteImport } from './routes/me'
import { Route as IndexRouteImport } from './routes/index'
import { Route as RoomRoomIdRouteImport } from './routes/room/$roomId'

const MeRoute = MeRouteImport.update({
  id: '/me',
  path: '/me',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RoomRoomIdRoute = RoomRoomIdRouteImport.update({
  id: '/room/$roomId',
  path: '/room/$roomId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/me': typeof MeRoute
  '/room/$roomId': typeof RoomRoomIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/me': typeof MeRoute
  '/room/$roomId': typeof RoomRoomIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/me': typeof MeRoute
  '/room/$roomId': typeof RoomRoomIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/me' | '/room/$roomId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/me' | '/room/$roomId'
  id: '__root__' | '/' | '/me' | '/room/$roomId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MeRoute: typeof MeRoute
  RoomRoomIdRoute: typeof RoomRoomIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/me': {
      id: '/me'
      path: '/me'
      fullPath: '/me'
      preLoaderRoute: typeof MeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/room/$roomId': {
      id: '/room/$roomId'
      path: '/room/$roomId'
      fullPath: '/room/$roomId'
      preLoaderRoute: typeof RoomRoomIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MeRoute: MeRoute,
  RoomRoomIdRoute: RoomRoomIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
